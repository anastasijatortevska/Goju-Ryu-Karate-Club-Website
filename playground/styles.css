@charset "utf-8";
/* CSS Document */

body {
	font: 100% Calibri, Arial, sans-serif;
	background-color: #292727;
	margin: 0; 
	padding:0;
	color: #000;
}
/* ~~ Element/tag selectors ~~ */

ul, ol, dl { 
	/* Due to variations between browsers, it's best practices to zero padding and margin on lists. For consistency, you can either specify the amounts you want here, or on the list items (LI, DT, DD) they contain. Remember that what you do here will cascade to the .nav list unless you write a more specific selector. */
	padding: 0;
	margin: 0;
}

h1, h2, h3, h4, h5, h6, p {
	margin-top: 0;	 
	/* removing the top margin gets around an issue where margins can escape from their containing block. The remaining bottom margin will hold it away from any elements that follow. */

	padding-right: 20px;
	padding-left: 20px; 
	/* adding the padding to the sides of the elements within the blocks, instead of the block elements themselves, gets rid of any box model math. A nested block with side padding can also be used as an alternate method. */
	text-align: left;
}

h2 {
	color: #163669; /*darkest blue*/
}

h3 {
	color: #477ebb /*darker blue*/
}

p {
	color:#333;
}

.container footer h5 {
	font-weight: normal;
	text-align: center;
}

a img { 
	/* this selector removes the default blue border displayed in some browsers around an image when it is surrounded by a link */
	border: none;
}

/* ~~ Styling for your site's links must remain in this order - including the group of selectors that create the hover effect. ~~ */

a:link, a:visited {
	color: #477ebb; /*darker blue*/
	text-decoration: none; 
	/* unless you style your links to look extremely unique, it's best to provide underlines for quick visual identification */
}

a:hover, a:active, a:focus { 
	/* this group of selectors will give a keyboard navigator the same hover experience as the person using a mouse. */
	text-decoration: none;
}

/* ~~ This fixed width container surrounds all other blocks ~~ */

.container {
	width: 960px;
	background-color: #FFFFFF;
	margin: 0 auto; /* the auto value on the sides, coupled with the width, centers the layout */
}

/* ~~ The header is not given a width. It will extend the full width of your layout. ~~ */

header {
	background-color: #f0eeed;
}

/* ~~ These are the columns for the layout. ~~ 

1) Padding is only placed on the top and/or bottom of the block elements. The elements within these blocks have padding on their sides. This saves you from any "box model math". Keep in mind, if you add any side padding or border to the block itself, it will be added to the width you define to create the *total* width (in .container). You may also choose to remove the padding on the element in the block element and place a second block element within it with no width and the padding necessary for your design.

2) No margin has been given to the columns since they are all floated. If you must add margin, avoid placing it on the side you're floating toward (for example: a right margin on a block set to float right). Many times, padding can be used instead. For blocks where this rule must be broken, you should add a "display:inline" declaration to the block element's rule to tame a bug where some versions of Internet Explorer double the margin.

3) Since classes can be used multiple times in a document (and an element can also have multiple classes applied), the columns have been assigned class names instead of IDs. For example, two sidebar blocks could be stacked if necessary. These can very easily be changed to IDs if that's your preference, as long as you'll only be using them once per document.

4) If you prefer your nav on the left instead of the right, simply float these columns the opposite direction (all left instead of all right) and they'll render in reverse order. There's no need to move the blocks around in the HTML source.

*/
/*.sidebar1 {
	float: right;
	width: 178px;
	border-left: 2px solid #163669; /*darkest blue
	margin-top: 45px;
	margin-bottom: 10px;
	padding: 10px 0;
}*/

.content {
	padding: 10px 0;
	width: 960px;
	float: left;
	margin-top: 45px;
}

/* ~~ This grouped selector gives the lists in the .content area space ~~ */

.content ul, .content ol {
	padding: 0 15px 15px 25px;
	/* this padding mirrors the right padding in the headings and paragraph rule above. Padding was placed on the bottom for space between other elements on the lists and on the left to create the indention. These may be adjusted as you wish. */
}

/* ~~ The footer ~~ */

footer {
	padding: 10px 0;
	background-color: #f0eeed;
	position: relative;/* this gives IE6 hasLayout to properly clear */
	clear: both;
}

/*HTML 5 support - Sets new HTML 5 tags to display:block so browsers know how to render the tags properly. */

header, section, footer, aside, article, figure {
	display: block;
}

/*MENU BAR*/
/* Sprynav.css - version 0.6 - Spry Pre-Release 1.6.1 */

/*******************************************************************************

 LAYOUT INFORMATION: describes box model, positioning, z-order

 *******************************************************************************/

/* The outermost container of the Menu Bar, an auto width box with no margin or padding */
ul.nav
{
	margin: 0;
	padding: 0;
	backgrond-color:#f0eeed;
	list-style-type: none;
	font-size: 75%;
	cursor: default;
	width: auto;
	border-top: 2px solid #163669;

}
/* Set the active Menu Bar with this class, currently setting z-index to accomodate IE rendering bug: http://therealcrisp.xs4all.nl/meuk/IE-zindexbug.html */
ul.nav
{
	z-index: 1000;
}
/* Menu item containers, position children relative to this container and are a fixed width */
ul.nav li
{
	margin: 0;
	padding: 0;
	list-style-type: none;
	font-size: 100%;
	position: relative;
	text-align: center;
	cursor: pointer;
	width: 20%; /*Set to percentage of number of li there are, or 960/that number.*/
	float: left;
}
/* Submenus should appear below their parent (top: 0) with a higher z-index, but they are initially off the left side of the screen (-1000em) */
ul.nav ul
{
	margin: 0;
	padding: 0;
	list-style-type: none;
	font-size: 100%;
	z-index: 1020;
	cursor: default;
	width: 160px;
	position: absolute;
	left: -1000em;
}
/* Submenu that is showing with class designation MenuBarSubmenuVisible, we set left to auto so it comes onto the screen below its parent menu item */
ul.nav ul.MenuBarSubmenuVisible
{
	left: auto;
}
/* Menu item containers are same fixed width as parent */
ul.nav ul li
{
	width: 160px;
}
/* Submenus should appear slightly overlapping to the right (95%) and up (-5%) */
ul.nav ul ul
{
	position: absolute;
	margin: -5% 0 0 95%;
}
/* Submenu that is showing with class designation MenuBarSubmenuVisible, we set left to 0 so it comes onto the screen */
ul.nav ul.MenuBarSubmenuVisible ul.MenuBarSubmenuVisible
{
	left:0;
	top:0;
}

/*******************************************************************************

 DESIGN INFORMATION: describes color scheme, borders, fonts

 *******************************************************************************/

/* Submenu containers have borders (lighter blue) on all sides */
ul.nav ul
{
	border: 1px solid #aec8e5;
}
/* Menu items are a lighter gray block with padding and no text decoration */
ul.nav a
{
	display: block;
	cursor: pointer;
	background-color: #f0eeed;
	padding: 0.5em 0.75em;
	color: #333;
	text-decoration: none;
}
/* Menu items that have mouse over or focus have a darker blue background and white text */
ul.nav a:hover, ul.nav a:focus
{
	background-color: #477ebb;
	color: #FFF;
}
/* Menu items that are open with submenus are set to MenuBarItemHover with a darker blue background and white text */
ul.nav a.MenuBarItemHover, ul.nav a.MenuBarItemSubmenuHover, ul.nav a.MenuBarSubmenuVisible
{
	background-color: #477ebb;
	color: #FFF;
}

/*******************************************************************************

 SUBMENU INDICATION: styles if there is a submenu under a given menu item

 *******************************************************************************/

/* Menu items that have a submenu have the class designation dropdown-toggle and are set to use a background image positioned on the far left (95%) and centered vertically (50%) */

ul.nav a.w3-dropdown-hover
{
	background-image: url("/SpryAssets/SpryMenuBarDown.gif");
	background-repeat: no-repeat;
	background-position: 95% 50%;
}

/* Menu items that have a submenu have the class designation dropdown-toggle and are set to use a background image positioned on the far left (95%) and centered vertically (50%) */

ul.nav ul a.w3-dropdown-hover
{
	background-image: url("/SpryAssets/SpryMenuBarRight.gif");
	background-repeat: no-repeat;
	background-position: 95% 50%;
}

/* Menu items that are open with submenus have the class designation MenuBarItemSubmenuHover and are set to use a "hover" background image positioned on the far left (95%) and centered vertically (50%) */
ul.nav a.MenuBarItemSubmenuHover
{
	background-image: url("SpryAssets/SpryMenuBarDownHover.gif");
	background-repeat: no-repeat;
	background-position: 95% 50%;
}
/* Menu items that are open with submenus have the class designation MenuBarItemSubmenuHover and are set to use a "hover" background image positioned on the far left (95%) and centered vertically (50%) */
ul.nav ul a.MenuBarItemSubmenuHover
{
	background-image: url("/SpryAssets/SpryMenuBarRightHover.gif");
	background-repeat: no-repeat;
	background-position: 95% 50%;
}

/*******************************************************************************

 BROWSER HACKS: the hacks below should not be changed unless you are an expert

 *******************************************************************************/

/* HACK FOR IE: to make sure the sub menus show above form controls, we underlay each submenu with an iframe */
ul.nav iframe
{
	position: absolute;
	z-index: 1010;
	filter:alpha(opacity:0.1);
}
/* HACK FOR IE: to stabilize appearance of menu items; the slash in float is to keep IE 5.0 from parsing */
@media screen, projection
{
	ul.nav li.MenuBarItemIE
	{
		display: inline;
		f\loat: left;
		background: #aec8e5;
	}
}